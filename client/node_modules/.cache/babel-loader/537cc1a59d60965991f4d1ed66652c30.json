{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaurasingh\\\\Desktop\\\\Project\\\\client\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from } from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport GetBloges from \"./Components/GetBloges\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst errorLink = onError(_ref => {\n  let {\n    graphqlErrors\n  } = _ref;\n\n  if (graphqlErrors) {\n    const gqlErrors = graphqlErrors.map(_ref2 => {\n      let {\n        message,\n        location,\n        path\n      } = _ref2;\n      return `Graphql error: ${message}`;\n    });\n\n    for (const error of gqlErrors) {\n      console.log(error);\n    }\n  }\n});\nconst link = from([errorLink, new HttpLink({\n  uri: \"http://localhost:5000/graphql\"\n})]);\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(GetBloges, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ApolloClient","InMemoryCache","ApolloProvider","HttpLink","from","onError","GetBloges","errorLink","graphqlErrors","gqlErrors","map","message","location","path","error","console","log","link","uri","client","cache","App"],"sources":["C:/Users/gaurasingh/Desktop/Project/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n \nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  HttpLink,\n  from,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\n\nimport GetBloges from \"./Components/GetBloges\";\n\nconst errorLink = onError(({ graphqlErrors }) => {\n  if (graphqlErrors) {\n    const gqlErrors = graphqlErrors.map(({ message, location, path }) => {\n      return (`Graphql error: ${message}`);\n    });\n    for (const error of gqlErrors) {\n      console.log(error);\n    }\n  }\n});\n\nconst link = from([\n  errorLink,\n  new HttpLink({ uri: \"http://localhost:5000/graphql\" }),\n]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link,\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <GetBloges />\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAO,sDAAP;AAEA,SACEA,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,IALF,QAMO,gBANP;AAOA,SAASC,OAAT,QAAwB,2BAAxB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,SAAS,GAAGF,OAAO,CAAC,QAAuB;EAAA,IAAtB;IAAEG;EAAF,CAAsB;;EAC/C,IAAIA,aAAJ,EAAmB;IACjB,MAAMC,SAAS,GAAGD,aAAa,CAACE,GAAd,CAAkB,SAAiC;MAAA,IAAhC;QAAEC,OAAF;QAAWC,QAAX;QAAqBC;MAArB,CAAgC;MACnE,OAAS,kBAAiBF,OAAQ,EAAlC;IACD,CAFiB,CAAlB;;IAGA,KAAK,MAAMG,KAAX,IAAoBL,SAApB,EAA+B;MAC7BM,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD;EACF;AACF,CATwB,CAAzB;AAWA,MAAMG,IAAI,GAAGb,IAAI,CAAC,CAChBG,SADgB,EAEhB,IAAIJ,QAAJ,CAAa;EAAEe,GAAG,EAAE;AAAP,CAAb,CAFgB,CAAD,CAAjB;AAKA,MAAMC,MAAM,GAAG,IAAInB,YAAJ,CAAiB;EAC9BoB,KAAK,EAAE,IAAInB,aAAJ,EADuB;EAE9BgB,IAAI,EAAEA;AAFwB,CAAjB,CAAf;;AAKA,SAASI,GAAT,GAAe;EACb,oBACE,QAAC,cAAD;IAAgB,MAAM,EAAEF,MAAxB;IAAA,uBACE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;KANQE,G;AAQT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}